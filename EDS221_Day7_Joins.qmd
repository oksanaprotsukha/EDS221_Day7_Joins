---
title: "EDS221_Day7_Joins"
author: "OP"
format: html
editor: visual
execute: 
  warning: false
---

```{r}
library(palmerpenguins)
library(tidyverse)
```

## Data wrangling refresher

1.  Starting from penguins write a single piped sequence in which you include:

-   only penguins at Dream and Biscoe islands
-   Remove the year and sex variables
-   Add a new column body_mass_kg with penguin mass converted from g to kg
-   Rename the island variable to location

```{r}
penguins_dream_biscoe <- penguins %>% 
  # only penguins at Dream and Biscoe islands
  filter(island %in% c("Dream", "Biscoe")) %>% 
  # Remove the year and sex variables
  select(-year, -sex) %>% 
  # Add a new column body_mass_kg with penguin mass converted from g to kg
  mutate(body_mass_kg = body_mass_g/1000) %>% 
  # Rename the island variable to location
  rename(location = island)
```

2.  Starting from penguins write a single piped sequence in which you include:

-   Limit to Adele penguins
-   Remove any observations where flipper_length_mm is NA (!is.na()) or drop_na
-   group the data by sex
-   Create a summary table that contains the mean, std. deviation and sample size of flipper lengths for male and female Adele penguins

```{r}
penguins_adelie <- penguins %>% 
  filter(species == "Adelie") %>% 
  filter(!is.na(flipper_length_mm)) %>% 
  filter(!is.na(sex)) %>% 
  group_by(sex) %>% 
  summarise(adelie_mean = mean(flipper_length_mm),
            adelie_sd = sd(flipper_length_mm),
            total_adelie_sample = n())

```

```{r}
# Alternative method to the task #2
penguins_adelie_2 <- penguins %>% 
  filter(species == "Adelie") %>% 
  # remove all rows with NA values
  drop_na() %>% 
  # count with group by
  count(species, sex)

```

```{r}
animals <- data.frame(
  stringsAsFactors = FALSE,
          location = c("lagoon", "bluff", "creek", "oaks", "bluff"),
           species = c("bobcat", "coyote", "fox", "squirrel", "bobcat"),
          maturity = c("adult", "juvenile", "adult", "juvenile", "adult")
)
```

```{r}
sites <- data.frame(
  stringsAsFactors = FALSE,
          location = c("beach", "lagoon", "bluff", "oaks"),
    full_site_name = c("Goleta Beach","UCSB Lagoon",
                       "Ellwood Mesa","Fremont Campground"),
      jurisdiction = c("SB City", "UCSB", "SB City", "USFS")
)
```

## Joins

### full_join()

```{r}
full_join_ex <- full_join(animals, sites)
```

### left_join()

```{r}
left_join_ex <- left_join(animals, sites)
```

### inner_join()

```{r}
inner_join_ex <- inner_join(animals, sites)
dim(inner_join_ex)
```

### full_join() with filters

```{r}
full_join_filter_ex <- full_join(animals, sites) %>% 
  drop_na()
dim(inner_join_ex)
```
